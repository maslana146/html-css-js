/*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    AKAI Frontend Task - CSS

    Spróbuj zmodyfikować poniższy plik ze stylami tak, by upiększyć formularz na stronie.
    Jako inspiracji możesz skorzystać z szablonu znajdującego się w pliku img/layout.png
    Nie wymagamy, by wykonać identyczny layout. Liczy się kreatywność.

    Przy wykonywaniu zadania można zmienić strukturę pliku index.html.
    Pamiętaj, że w takim wypadku będzie trzeba zadbać o dostosowanie odpowiednich selektorów.

    Jeśli korzystasz z preprocessorów takich jak Sass/Less, również możesz się tym pochwalić.

    Powodzenia!
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/


/*
Przeanalizuj składnię pliku .css.
Przy stylowaniu na najpierw podajemy, co chcemy ostylować, a następnie jakie atrybuty chcemy zmienić.
np. poniższy selektor (body) oznacza, że modyfikujemy kontent body w dokumencie html.
Żeby mieć pewność o czym mowa, zajrzyj w plik index.html, i znajdź tag <body>.
*/
body {
  height: auto;
  padding-top: 150px;
  padding-bottom: 300px;
  text-decoration: none;

  color: #3A4B4C;
  /*
  wszystko co znajduje się pomiędzy nawiasami klamrowymi, to nasze polecenia modyfikujące określony element dokumentu
  Poniżej zmieniamy atrybut font-family, który jest odpowiedzialny za wyświetlaną na stronie czcionkę
  Zastanów się, czy Comic Sans jest odpowiedni.
  Jeśli nie, wybierz inną czcionkę i zmodyfikuj poniższy tekst.
  */
  font-family: 'Red Hat Text', sans-serif;
background: linear-gradient(45deg, rgba(171,222,227,1) 0%, rgba(171,222,227,1) 0%, rgba(111,220,226,1) 12%, rgba(55,190,161,1) 17%, rgba(55,79,93,1) 70%, rgba(171,222,227,1) 100%);
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#abdee3', endColorstr='#abdee3', GradientType=1 );
}

/*
selektor gwiazdki oznacza, że odnosimy się do konkretnego 'id' w pliku html.
w tym przypadku odnosimy się do id "task-frontend".
Zobacz, co się kryje pod tym id w pliku index.html.
*/

#task-frontend {
  /*
  pomiędzy nawiasami klamrowymi ponownie możemy modyfikować atrybuty wybranego elementu.
  Opiszę krótko, co dzieje się w poniższym przykładzie:
  */
padding-top: 25px;
  /*
  border modyfikuje obramowanie elementu. Obramowanie zawiera w sobie trzy atrybuty: grubość, styl i kolor.
  Można się do nich odnosić indywidualnie, albo do wszystkich na raz, tak jak jest to zrobione poniżej.
  Spróbuj dostosować obramowanie tak, żeby lepiej się prezentowało. Oczywiście, jeśli uważasz, że obramowanie nie jest potrzebne,
  możesz zrezygnować z modyfikacji tego atrybutu. Domyślnie elementy nie posiadają obramowania, więc wystarczy usunąć poniższą linię.
  */

  border-radius: 43px 43px 43px 43px;
-moz-border-radius: 43px 43px 43px 43px;
-webkit-border-radius: 43px 43px 43px 43px;
-webkit-box-shadow: 9px 7px 50px -6px rgba(0,0,0,0.59);
-moz-box-shadow: 9px 7px 50px -6px rgba(0,0,0,0.59);
box-shadow: 9px 7px 50px -6px rgba(0,0,0,0.59);

height: 400px;

  /*
  max-width ustawia maksymalną szerokość dla wybranego elementu. Oznacza to, że element osiągnie co najwyżej taką szerokość.
  Natomiast jeśli nie będzie to możliwe (okno będzie mniejsze), to element skurczy się wraz z tym oknem.
  */
	max-width: 400px;

  /*
  atrybut margin definiuje miejsce wolne poza obramowaniem elementu.
  margin jest jednym ze składowych bardzo ważnego pojęcia w CSS, które nazywamy Box Model.
  Zachęcam do poczytania więcej na ten temat, np. pod adresem:
  https://www.w3schools.com/css/css_boxmodel.asp

  W poniższym przypadku ustawiamy wartość margin na górze i dole równą 0, zaś po bokach 'auto' - co oznacza,
  że wartości po lewej i prawej będą obliczone przez przeglądarkę podczas renderowania strony, tak, aby margin-left i margin-right
  otrzymały taką samą wartość, co będzie skutowało tym, że element zostanie na stronie wycentrowany.
  */
  margin:  auto;

  /*
  atrybut text-align definiuje horyzontalne umieszczenie (wyrównanie) tekstu.
  Wartość center oznacza, że chcemy umieścić tekst na środku.
  */
	text-align: center;

  /*
  background-color definiuje kolor tła w elemencie.
  CSS zawiera prefediniowane wartości takie jak white, red, black, etc, ale można również tworzyć własne
  poprzez podanie odpowiedniej wartości rgba
  */
  background-color:rgba(176,190,197,0.59);  

  /*
  zamykająca klamra oznacza, że kończymy modyfikować atrybuty danego elementu
  */
}


/*
jeśli widzisz dwa elementy (A, B) oddzielone spacją, oznacza to, że modyfikujemy wszystkie elementy B, które zawierają się w A.
W poniższym przypadku modyfikujemy wszystkie elementy z klasą "basic-title", które znajdują się w elemencie o id "task-frontend".
*/
#task-frontend .basic-title {
  /*
  atrybut 'color' definiuje kolor tekstu w elemencie.
  Zastanów się, czy kolor czerwony jest odpowiedni.
  Jeśli nie, zmodyfikuj poniższy tekst wedle własnego uznania.
  */
 text-shadow: 2px 2px 7px rgba(0,0,0,0.61);
  color: #3A4B4C;
  padding-top: 20px;
  padding-bottom: 10px;
  font-size: 28px;
  font-family: 'Red Hat Text', sans-serif;
}

/*
podobna sytuacja występuje poniżej. Wybieramy wszystkie elementy z klasą 'form-line' znajdujące się w elemencie o id 'task-frontend'.
*/
#task-frontend .form-line {
  border: 0px solid blue;
  padding: 0px;
}


/*
znasz już sposób definiowania selektorów.
Oczywiście nie przerobiliśmy jeszcze wszystkich. W związku z tym zachęcam Cię do zapoznania się z innymi selektorami, np. tutaj:
https://www.w3schools.com/cssref/css_selectors.asp
Chciałbym, byś przeanalizowała / przeanalizował poniższe style i zmodyfikować je według własnego uznania.
*/

#task-frontend form>label {
  text-transform: uppercase;
  

}

#task-frontend input[type="text"], #task-frontend input[type="email"] {
  display: block;
  text-align: center;
  background-color: #e2f1f8;
  margin: 12px auto;
  border: none;
  max-width: 300px;
  width: 250px;
  height: 30px;
  border-radius: 43px 43px 43px 43px;
-moz-border-radius: 43px 43px 43px 43px;
-webkit-border-radius: 43px 43px 43px 43px;
-webkit-box-shadow: 9px 7px 50px -6px rgba(0,0,0,0.59);
-moz-box-shadow: 9px 7px 50px -6px rgba(0,0,0,0.59);
box-shadow: 9px 7px 50px -6px rgba(0,0,0,0.59);
-webkit-box-shadow: inset 12px 18px 40px -29px rgba(0,0,0,0.75);
-moz-box-shadow: inset 12px 18px 40px -29px rgba(0,0,0,0.75);
box-shadow: inset 12px 18px 40px -29px rgba(0,0,0,0.75);
}
#task-frontend span {
  display: block;
}

#task-frontend input[type="checkbox"] {
  margin-top:10px;
  padding-left: 5px;
  margin-right: 5px;
  text-shadow: 2px 2px 7px rgba(0,0,0,0.61);
  column-count: 2;
	border: 10px solid red;
	text-transform: none;
  align-content: justify;

  
}

#task-frontend input[type="submit"] {
  align-content: center;
	color: white;
  text-shadow: 2px 2px 7px rgba(0,0,0,0.61);
	margin-top: 15px;
	width: 100px;
	height: 40px;
  background-color:rgba(66,89,123,0.8);
	text-align: center;
border-radius: 77px 77px 77px 77px;
-moz-border-radius: 77px 77px 77px 77px;
-webkit-border-radius: 77px 77px 77px 77px;
border: 0px solid #000000;
-webkit-box-shadow: 5px 5px 16px -1px rgba(0,0,0,0.75);
-moz-box-shadow: 5px 5px 16px -1px rgba(0,0,0,0.75);
box-shadow: 5px 5px 16px -1px rgba(0,0,0,0.75);

} 

::placeholder {
  color: gray;
  font-size: 15px;
  font-family: 'Red Hat Text', sans-serif;
  text-align: center;

}


</style>